@use 'sass:math'

@font-face
  font-family: Stardew Valley Stonks
  src: url("/public/Stardew Valley Stonks.otf")

$phi: math.div(1 + math.sqrt(5), 2)

@function ui-img($file)
  @return url("/public/img/UI/#{$file}.png")


@function icon-size($px)
  @return calc(var(--icon-scale) * #{$px}px)

:root
  font: var(--font-size, 100%) / 1.25 Stardew Valley Stonks, Nunito, sans
  --space-base-width: calc(3rem / 13)
  --space-width: calc(var(--icon-scale) * var(--space-base-width))
  --icon-scale: var(--icon-base-scale)
  --arrow-length: #{icon-size(11)}
  --arrow-width: #{icon-size(10)}

body
  display: flex
  flex-direction: column

  min-height: 100vh
  max-height: 100vh

  background-image: ui-img("Gradient")
  background-size: contain
  background-repeat: repeat-x
  margin: 0

  & > span // noscript
    text-align: center
    margin-top: 1rem

ul
  list-style: none
  padding: 0
  margin: 0

dl
  display: grid
  grid-template-columns: auto auto
  justify-content: start
  gap: 0 0.5rem

dt::after
  content: ":"

dd
  margin: 0

tbody th
  text-align: left

button
  font-family: inherit
  font-size: inherit

input
  font-family: inherit
  font-size: inherit

.file
  &-dropzone
    background: lightgray
    height: 5rem

  &-input
    display: inline-block

    & > input
      display: none

    &:hover
      transform: scale(1.1)


%focus-outline
  outline: var(--eighth-border) solid #d83700

input[type=range]:focus
  outline: none


input[type=range]
  -webkit-appearance: none
  background: transparent
  margin: 0
  width: calc(max(100px, 10em))

  &::-webkit-slider-thumb
    -webkit-appearance: none
    border: none
    height: 32px
    width: 16px
    image-rendering: pixelated
    background: ui-img("Range Thumb")
    background-size: contain
    background-repeat: no-repeat
    background-position: center
    cursor: pointer
    margin-top: -13px
    box-shadow: none

    &:hover, &:active
      // margin-top: -14px
      // transform: scale(1.25)

  &::-moz-range-thumb
    border: none
    height: 32px
    width: 16px
    image-rendering: crisp-edges
    background: ui-img("Range Thumb")
    background-size: contain
    background-repeat: no-repeat
    background-position: center
    cursor: pointer

    &:hover, &:active
      transform: scale(1.25)

  &::-webkit-slider-runnable-track
    height: 6px
    cursor: pointer
    background: #b14e05

  // &:focus::-webkit-slider-runnable-track
  //   background: #367ebd

  &::-moz-range-track
    // width: 100%
    height: 6px
    cursor: pointer
    background: #b14e05

  // &:focus::-moz-range-track
    // background: #367ebd


main
  flex-grow: 1
  display: flex
  flex-flow: row
  overflow: hidden

  & > section
    min-width: 50%
    display: flex
    flex-direction: column
    overflow: hidden

    & > [role=tabpanel]
      flex-grow: 1
      display: flex
      flex-direction: column
      overflow: auto

.graph
  flex-grow: 1
  overflow: hidden

  &-controls
    display: flex
    justify-content: center
    align-items: center

// svg
  // @extend .pixel

.recharts-wrapper
  overflow: hidden

.recharts-bar-rectangle
  cursor: pointer

.pair-image
  cursor: pointer

.pair-select
  cursor: pointer
  fill: transparent

.summary

  &-controls
    display: flex
    flex-direction: column
    align-items: center

    & > div
      display: flex
      width: 100%
      justify-content: center
      align-items: center

.settings-group
  display: flex
  flex-direction: column

@media (max-aspect-ratio: 1)
  body
    max-height: unset

  main
    display: block

  .graph
    height: 50vh


details > div
  opacity: 0
  transform: scaleY(0)

// details[open] > div
// and
// details.open > div
// are broken -> only gets triggered on first open?
details > div.open
  opacity: 1
  transform: scaleY(1)
  transform-origin: top
  transition: opacity 0.5s, transform 0.5s


%pixel
  image-rendering: pixelated
  image-rendering: crisp-edges

img
  @extend %pixel

.icon-processor
  width: 1.25rem

  &-large
    width: 1.25rem
    image-rendering: unset


%hidden-input
  transform: scale(0)
  opacity: 0
  position: absolute

.checkbox
  cursor: pointer

  & > input
    @extend %hidden-input

  & > input + img
    content: ui-img("Checkbox")
    $scale: 2
    width: icon-size(9 * $scale)
    height: icon-size(9 * $scale)

  & > input:checked + img
    content: ui-img("Checkedbox")

  & > input:focus + img
    @extend %focus-outline

  &:hover > input + img
    transform: scale(1.1)

.label > input + img
  margin-right: var(--space-width)

.profession
  display: block
  width: 100%
  height: 2.5rem

  & > input
    @extend %hidden-input

  & > input:checked + *
    color: green

  & > input:focus + *
    @extend %focus-outline

  &:hover
    background: white

.professions
  display: flex
  justify-content: center
  align-items: center
  flex-wrap: wrap

  & > div
    display: flex
    flex-direction: column
    width: 50%
    align-items: center

.skill
  display: flex
  flex-direction: column

  & > span:first-child
    --icon-scale: calc(var(--icon-base-scale) * 2)
    font-size: 2rem
    text-align: center

  &-level
    display: flex
    flex-direction: column


.calendar
  &-season
    padding: 0.5rem 1rem 0.5rem 1rem
    min-width: min-content

  &-header
    display: flex
    justify-content: center
    align-items: center
    font-size: 2rem
    margin-bottom: 0.25rem
    --icon-scale: calc(var(--icon-base-scale) * 2)

  &-days
    display: grid
    grid-template-columns: repeat(7, minmax(4rem, 1fr))
    grid-auto-rows: 1fr
    gap: var(--eighth-border)
    border: var(--eighth-border) solid black

    & > div
      position: relative
      display: flex
      aspect-ratio: 1
      align-items: center
      justify-content: center
      outline: var(--eighth-border) solid black
      padding: 10%
      $counter-offset: 2.5%

      & > img
        width: 50%
        height: unset

      &:nth-child(28n + 1)
        counter-reset: day

      &::before
        counter-increment: day
        content: counter(day)
        position: absolute
        top: $counter-offset
        left: calc(#{$counter-offset} + 0.25rem)



.input-box
  outline: none
  background: none
  @extend %pixel
  border-image-source: ui-img("Input Box")
  border-image-slice: 3 fill
  border-image-width: 0.5rem
  padding: 0.5rem

  &::-webkit-outer-spin-button, &::-webkit-inner-spin-button
    -webkit-appearance: none
    margin: 0

  -moz-appearance: textfield


.select
  $padding: 0.5rem
  $background: #f9ba66
  $background-hover: #f5deb3
  --border: #5b2b2a solid var(--sixth-border)

  display: inline-flex
  cursor: pointer

  &:focus-within
    @extend %focus-outline

  &[aria-expanded=true]:focus-within
    outline: none

  &[aria-expanded=false]:hover > div > .select-control
    background-color: $background-hover

  & > div
    position: relative

  & > img
    content: ui-img("Select Spinner")
    height: calc(max(24px, 2rem + 4px)) // eyeball css
    border: var(--border)
    border-left: none
    box-sizing: border-box

  &-control
    position: relative
    height: 100%
    box-sizing: border-box
    border: var(--border)
    background-color: $background
    padding: 0 $padding

    display: flex
    align-items: center

    & > input[type=search]
      outline: none
      background: transparent
      border: none
      position: absolute
      padding: 0
      width: calc(100% - 2 * #{$padding})
      height: 100%

      &:not(:placeholder-shown) + *
        visibility: hidden

    & > input[inputmode=none]
      @extend %hidden-input

    & span
      display: inline
      overflow: hidden
      text-overflow: ellipsis
      white-space: nowrap

  &-list
    max-height: 40vh
    position: absolute
    left: 0
    top: 100%
    width: 100%
    z-index: 1
    border: var(--border)
    border-top: none
    background-color: $background
    box-sizing: border-box
    overflow: auto

    & > li
      padding: $padding

      &.select-empty
        text-align: center
        padding: 1.5 * $padding

      &[aria-selected=true]
        background-color: $background-hover


// with pixelated image rendering, rotating distorts the image on some browsers
// instead, let's create a class for each direction
.arrow-right
  content: ui-img("Arrow Right")
  width: var(--arrow-length)
  height: var(--arrow-width)

.arrow-up
  content: ui-img("Arrow Up")
  width: var(--arrow-width)
  height: var(--arrow-length)

.arrow-down
  content: ui-img("Arrow Down")
  width: var(--arrow-width)
  height: var(--arrow-length)

%arrow
  content: ""
  @extend %pixel
  background-size: cover

%arrow-right
  @extend %arrow
  background-image: ui-img("Arrow Right")
  width: var(--arrow-length)
  height: var(--arrow-width)

%arrow-up
  @extend %arrow
  background-image: ui-img("Arrow Up")
  width: var(--arrow-width)
  height: var(--arrow-length)

%arrow-down
  @extend %arrow
  background-image: ui-img("Arrow Down")
  width: var(--arrow-width)
  height: var(--arrow-length)

%season
  $scale: 2
  width: icon-size(12 * $scale)
  height: icon-size(8 * $scale)

@mixin season($name)
  .#{to-lower-case($name)}
    @extend %season
    content: url("/public/img/Seasons/#{$name}.png")

@each $season in Spring Summer Fall Winter
  @include season($season)

.seasons
  display: grid
  grid-template-columns: repeat(4, 1fr)

.icon
  width: icon-size(16)
  height: icon-size(16)

  &-text
    display: inline-block

    & > :first-child
      margin-right: var(--space-width)

@mixin icon-img($name, $folder)
  .#{to-lower-case($name)}
    @extend .icon
    content: url("/public/img/#{$folder}/#{$name}.png")

@each $product in Jam Pickles Wine Juice
  @include icon-img($product, "Products")

@each $profession in Tiller Artisan Agriculturist Gatherer Botanist
  @include icon-img($profession, "Skills")

%skill
  $scale: 2
  width: icon-size(10 * $scale)
  height: icon-size(10 * $scale)

@each $skill in Farming Foraging
  .#{to-lower-case($skill)}
    @extend %skill
    content: url("/public/img/Skills/#{$skill}.png")

@mixin quality($quality, $color)
  .#{to-lower-case(#{$quality})}
    --color: #{$color}
    --img: url("/public/img/Qualities/#{$quality}.png")

@include quality(Iridium, purple)
@include quality(Gold, gold)
@include quality(Silver, silver)
@include quality(Normal, white)

.crop-qualities
  $transition: flex-grow 0.75s

  width: 100%

  &-bars
    height: 1rem
    display: flex

    & > div
      transition: $transition
      background-color: var(--color)

  &-probs
    height: 1rem
    display: flex

    & > div
      transition: $transition
      flex-basis: min-content
      text-align: center
      color: var(--color)

.quality
  display: inline-block
  position: relative
  @extend .icon

  & > img:last-child
    content: var(--img)
    position: absolute
    left: 0
    bottom: 0
    width: icon-size(8)
    height: icon-size(8)


.disabled
  opacity: 0.5

footer
  background-color: white
  display: flex
  align-items: center
  justify-content: space-evenly
  text-align: center


th.sortable
  cursor: pointer

  &::after
    float: right

  &[aria-sort=ascending]::after
    @extend %arrow-up

  &[aria-sort=descending]::after
    @extend %arrow-down


th.collapsible
  cursor: pointer
  width: var(--arrow-length)

  &::before
    display: block

  &[aria-pressed=false]::before
    @extend %arrow-right

  &[aria-pressed=true]::before
    @extend %arrow-down


tr.collapsible
  cursor: pointer
  border-bottom: black dashed var(--eighth-border)

  & > td:first-child
    width: var(--arrow-length)

    &::before
      display: block

  &[aria-pressed=false] > td:first-child::before
    @extend %arrow-right

  &[aria-pressed=true] > td:first-child::before
    @extend %arrow-down

  &[aria-pressed=false] ~ tr
    visibility: collapse


.profit-table
  --border: black solid var(--eighth-border)

  border-collapse: collapse

  & > *
    border: var(--border)

  & > * > tr
    &:nth-child(odd)
      background: #f9ba66

    &:nth-child(even)
      background: scale-color(#f9ba66, $lightness: 25%)

  // all cells
  & > * > tr > *
    vertical-align: middle
    padding: 0.5rem
    text-align: right

    // profit column
    &:nth-last-child(2)
      min-width: 5rem

  // row header column in thead and tfoot
  & > * > tr > th:nth-child(-n+2)
    text-align: center

  // row header column in tbody
  & > tbody > tr > th:nth-child(-n+2)
    text-align: left
